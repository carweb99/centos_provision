- name: Install server config file
  template:
    src: etc_my.cnf.d_server.cnf.j2
    dest: "{{ mariadb_config_server }}"
  notify: restart mariadb
  tags: mariadb

- name: Install network config file
  template:
    src: etc_my.cnf.d_network.cnf.j2
    dest: "{{ mariadb_config }}"
  notify: restart mariadb
  tags: mariadb
  
- name: Check if a custom root password is specified
  debug:
    msg: >
      Warning!! the MariaDB root password was left empty. Please set a custom
      password with role variable mariadb_root_password to secure your database
      server!
  when: mariadb_root_password | length == 0

# This command will fail when the root password was set previously
- name: Check if root password is set
  shell: >
    mysqladmin -u root status
  changed_when: false
  failed_when: false
  register: root_pwd_check
  tags: mariadb

- name: Set MariaDB root password for the first time (root@localhost)
  mysql_user:
    name: root
    password: "{{ mariadb_root_password }}"
    host: localhost
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  when: root_pwd_check.rc == 0
  tags: mariadb

- name: Set MariaDB root password for 127.0.0.1, ::1
  mysql_user:
    name: root
    password: "{{ mariadb_root_password }}"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  with_items:
    - ::1
    - 127.0.0.1
  when: root_pwd_check.rc == 0
  tags: mariadb  

- name: Remove the test database
  mysql_db:
    name: test
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: absent
  tags: mariadb

- name: Create user defined databases
  mysql_db:
    name: "{{ item.name }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  with_items: "{{ mariadb_databases }}"
  register: db_creation
  tags: mariadb

- name: Copy database init scripts
  template:
    src: "{{ item.item.init_script }}"
    dest: "/tmp/{{ item.item.init_script|basename }}"
    mode: '0600'
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined
  tags: mariadb

- name: Initialise databases
  mysql_db:
    name: "{{ item.item.name }}"
    state: import
    target: "/tmp/{{ item.item.init_script|basename }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined
  tags: mariadb

- name: Delete init scripts from the server
  file:
    name: "/tmp/{{ item.item.init_script|basename }}"
    state: absent
  with_items: "{{ db_creation.results }}"
  when: item.changed and item.item.init_script is defined
  tags: mariadb
  
- name: Remove anonymous users
  mysql_user:
    name: ''
    host_all: true
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: absent
  tags: mariadb

- name: Create the users
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    host: "{{ item.host|default('localhost') }}"
    priv: "{{ item.priv }}"
    append_privs: "{{ item.append_privs|default('no') }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  with_items: "{{ mariadb_users }}"
  tags: mariadb
